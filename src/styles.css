<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Relevamiento Ambiental Mínimo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />

  <style>
    :root {
      --primary-bg: #ffffff;
      --accent-color: #0077b6;
      --shadow: rgba(0, 0, 0, 0.1);
      --text-color: #333;
    }

    * {
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      margin: 0;
      display: flex;
      height: 100vh;
      background: #f9f9f9;
      color: var(--text-color);
    }

    #sidebar {
      width: 320px;
      background: var(--primary-bg);
      box-shadow: 2px 0 8px var(--shadow);
      padding: 1rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      z-index: 1000;
    }

    #map {
      flex-grow: 1;
      height: 100vh;
      width: 100%;
    }

    .formulario {
      background: var(--primary-bg);
      border-radius: 8px;
      padding: 1rem;
      box-shadow: 0 2px 8px var(--shadow);
      font-size: 0.9rem;
    }

    .formulario label {
      font-weight: bold;
      font-size: 0.95rem;
    }

    .formulario input,
    .formulario button {
      width: 100%;
      margin-top: 0.4rem;
      padding: 0.5rem;
      font-size: 0.9rem;
      border-radius: 4px;
      border: 1px solid #ccc;
    }

    .formulario button {
      background: var(--accent-color);
      color: white;
      border: none;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .formulario button:hover {
      background: #005f8a;
    }

    .user-badge {
      width: 64px;
      height: 64px;
      margin-top: 16px;
      transition: transform 0.2s ease-in-out;
    }

    .user-badge:hover {
      transform: rotate(-5deg) scale(1.1);
    }

    .leaflet-control-container .leaflet-top.leaflet-right {
      top: 70px;
    }
  </style>
</head>

<body>
  <!-- Sidebar opcional (puedes usar esto si deseas un panel lateral más complejo) -->
  <!--
  <div id="sidebar">
    <img src="usuario.png" class="user-badge" alt="Usuario" />
    <p>Panel de usuario o herramientas extra</p>
  </div>
  -->

  <div id="map"></div>

  <!-- Formulario -->
  <div class="formulario">
    <label>Nombre del punto:</label>
    <input type="text" id="nombre" placeholder="Ej: Basural, Árbol, etc." />
    <button onclick="addMarker()">Agregar Punto</button>
    <button onclick="exportarGeoJSON()">Exportar</button>
  </div>

  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
  <script>
    const map = L.map("map").setView([-25.2637, -57.5759], 13);

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: "© OpenStreetMap",
    }).addTo(map);

    let markers = L.featureGroup().addTo(map);

    function addMarker() {
      const nombre = document.getElementById("nombre").value.trim();
      if (!nombre) {
        alert("Ingresá un nombre.");
        return;
      }

      const center = map.getCenter();
      const marker = L.marker(center, { draggable: true }).addTo(markers);
      marker.bindPopup(
        `<b>${nombre}</b><br><input value="${nombre}" oninput="updateNombre(this, ${marker._leaflet_id})" />`
      ).openPopup();
      marker.feature = {
        type: "Feature",
        properties: { nombre: nombre },
        geometry: {
          type: "Point",
          coordinates: [center.lng, center.lat]
        }
      };

      document.getElementById("nombre").value = "";
    }

    function updateNombre(input, id) {
      const marker = markers.getLayers().find(m => m._leaflet_id === id);
      if (marker && marker.feature) {
        marker.feature.properties.nombre = input.value;
      }
    }

    function exportarGeoJSON() {
      const geojson = {
        type: "FeatureCollection",
        features: markers.getLayers().map(m => {
          const latlng = m.getLatLng();
          return {
            type: "Feature",
            properties: m.feature.properties,
            geometry: {
              type: "Point",
              coordinates: [latlng.lng, latlng.lat],
            }
          };
        }),
      };

      const blob = new Blob([JSON.stringify(geojson, null, 2)], {
        type: "application/json"
      });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "relevamiento.geojson";
      a.click();
      URL.revokeObjectURL(url);
    }
  </script>
</body>
</html>


</body>
</html>
